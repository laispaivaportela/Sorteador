/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

/**
 *
 * @author laispaivaportela
 */
import javax.swing.DefaultListModel; //classe com modelos de lista
import java.util.ArrayList;
import java.util.List;
import DAO.ItensDAO;
import static principal.Principal.sorteador;

public class FrmSorteador extends javax.swing.JFrame {
DefaultListModel <String> model = new DefaultListModel<>(); //cria uma lista modelo
    /**
     * Creates new form FrmSorteador
     */
    public FrmSorteador() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        btnAdicionar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstItens = new javax.swing.JList<>();
        btnSortear = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtpaneItem = new javax.swing.JTextPane();
        jLabel5 = new javax.swing.JLabel();
        txtQuantidadeItens = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtProbabilidadeItens = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        itmNovo = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sorteador 1000 InAtor");

        jLabel2.setFont(new java.awt.Font("Inter 18pt Medium", 0, 80)); // NOI18N
        jLabel2.setText("Sorteador 1000 InAtor");

        jLabel3.setFont(new java.awt.Font("Inter 18pt", 0, 18)); // NOI18N
        jLabel3.setText("digite o nome do item:");

        txtNome.setFont(new java.awt.Font("Inter 18pt Light", 0, 17)); // NOI18N
        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        btnAdicionar.setFont(new java.awt.Font("Inter 18pt", 0, 17)); // NOI18N
        btnAdicionar.setText("adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        lstItens.setBorder(javax.swing.BorderFactory.createTitledBorder("Itens"));
        lstItens.setFont(new java.awt.Font("Inter 18pt", 0, 12)); // NOI18N
        lstItens.setName("Itens"); // NOI18N
        jScrollPane1.setViewportView(lstItens);

        btnSortear.setFont(new java.awt.Font("Inter 18pt Medium", 0, 17)); // NOI18N
        btnSortear.setText("sorteio");
        btnSortear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortearActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Inter 18pt Medium", 0, 30)); // NOI18N
        jLabel4.setText("Item escolhido:");

        txtpaneItem.setEditable(false);
        txtpaneItem.setFont(new java.awt.Font("Inter 18pt", 0, 28)); // NOI18N
        jScrollPane2.setViewportView(txtpaneItem);

        jLabel5.setFont(new java.awt.Font("Inter 18pt", 0, 12)); // NOI18N
        jLabel5.setText("quantidade de itens:");

        txtQuantidadeItens.setEditable(false);
        txtQuantidadeItens.setFont(new java.awt.Font("Inter 18pt Light", 0, 12)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Inter 18pt", 0, 12)); // NOI18N
        jLabel6.setText("probabilidade de qualquer item ser escolhido:");

        txtProbabilidadeItens.setEditable(false);
        txtProbabilidadeItens.setFont(new java.awt.Font("Inter 18pt Light", 0, 12)); // NOI18N
        jScrollPane4.setViewportView(txtProbabilidadeItens);

        jMenu1.setText("Arquivo");

        itmNovo.setText("Novo Arquivo");
        itmNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmNovoActionPerformed(evt);
            }
        });
        jMenu1.add(itmNovo);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Informações");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(456, 456, 456)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 893, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(115, 115, 115)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtQuantidadeItens, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(41, 41, 41))
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(253, 253, 253)
                        .addComponent(btnSortear, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(140, 140, 140))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 331, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSortear, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(186, 186, 186))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtQuantidadeItens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(137, 137, 137))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //método para quando o botão adicionar é acionado -> adiciona o valor correspondente a entrada do usuário através de métodos no Sorteador e no DAO
    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        String nomeItem = txtNome.getText(); //atribui a entrada à variável nomeItem
        sorteador.adicionaNome(nomeItem); //manda pro controle que manda para o dao pedindo para adicionar o item
        
        lstItens.setModel(model); //atribui o modelo
        
        int quantidadeItens = sorteador.quantidadeItens(); //pega a quantidade de itens
        int posicaoItem = quantidadeItens; //pega a posição do item (tamanho da lista)
        int posicaoLista = quantidadeItens - 1; //atribui a quantidade total de itens - 1 (começa no zero) à posição na Lista 
        String nomePosicao = String.format("%d. %s", posicaoItem, nomeItem); //imprime no gráfico a pseudo posição (posicaoReal + 1)
        model.add(posicaoLista, nomePosicao); //adiciona elemento (numero sorteado) na posição (tamanho total - 1)
        txtQuantidadeItens.setText(Integer.toString(quantidadeItens)); //imprime no gráfico a quantidade total de itens
        
        double probabilidadePorcentagem = sorteador.calculaProbabilidade() * 100; //transforma o valor da probabilidade em porcentagem
        String probabilidade = String.format("%.2f%%", probabilidadePorcentagem); //transforma o valor em String
        txtProbabilidadeItens.setText(probabilidade); //imprime no gráfico a probabilidade de qualquer numero ser escolhido em porcentagem
        txtNome.setText(""); //"limpa" o campo de texto para o usuario escrever o proximo item
    }//GEN-LAST:event_btnAdicionarActionPerformed

    //método para quando o botão sortear é acionado -> sorteia um valor e exibe o item correspondente através de métodos no Sorteador e no DAO
    private void btnSortearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortearActionPerformed
        String item = sorteador.sorteiaNumero(); //chama o metodo para escolher um valor aleatorio
        txtpaneItem.setText(item); //imprime o valor escolhido aleatoriamente no gráfico
        
    }//GEN-LAST:event_btnSortearActionPerformed

    //método para quando o menuItem Novo é acionado -> "limpa" todos os dados na tela para novas entradas surgirem
    private void itmNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmNovoActionPerformed

         model.clear(); //limpa a lista model
         txtQuantidadeItens.setText(""); //apaga o texto presente no campo de texto definido
         sorteador.novoArquivo(); //chama o método que posteriormente vai chamar outro método que, por sua vez, vai limpar à lista de itens
         txtProbabilidadeItens.setText(""); //apaga o texto presente no campo de texto definido
         txtNome.setText(""); //apaga o texto presente no campo de texto definido
         txtpaneItem.setText(""); //apaga o texto presente no campo de texto definido
    }//GEN-LAST:event_itmNovoActionPerformed

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    /**
     * @param args the command line arguments
     */
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnSortear;
    private javax.swing.JMenuItem itmNovo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JList<String> lstItens;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextPane txtProbabilidadeItens;
    private javax.swing.JTextField txtQuantidadeItens;
    private javax.swing.JTextPane txtpaneItem;
    // End of variables declaration//GEN-END:variables
}
